---
project_name: "opencontrail"

contrail_nodes: "{% for host in groups['etcd'] %}{{ hostvars[host]['ansible_' + hostvars[host]['api_interface']]['ipv4']['address'] }}{% if not loop.last %},{% endif %}{% endfor %}"

opencontrail_services:
  # Config database services
  opencontrail-configdb-nodemgr:
    container_name: "opencontrail_configdb_nodemgr"
    image: "{{ opencontrail_nodemgr_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      NODE_TYPE: "database"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
  opencontrail-configdb-zookeeper:
    container_name: "opencontrail_configdb_zookeeper"
    image: "{{ opencontrail_external_zookeeper_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      ZOOKEEPER_NODES: "{{ contrail_nodes }}"
      ZOOKEEPER_PORTS: "2888:3888"
      ZOOKEEPER_PORT: "2181"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
  opencontrail-configdb-cassandra:
    container_name: "opencontrail_configdb_cassandra"
    image: "{{ opencontrail_external_cassandra_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      CASSANDRA_SEEDS: "{{ contrail_nodes }}"
      CASSANDRA_START_RPC: "true"
      CASSANDRA_CLUSTER_NAME: "contrail_database"
      CASSANDRA_PORT: "9161"
      CASSANDRA_CQL_PORT: "9041"
      CASSANDRA_SSL_STORAGE_PORT: "7013"
      CASSANDRA_STORAGE_PORT: "7012"
      CASSANDRA_JMX_LOCAL_PORT: "7201"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"

  # Config API services
  opencontrail-config-nodemgr:
    container_name: "opencontrail_config_nodemgr"
    image: "{{ opencontrail_nodemgr_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      NODE_TYPE: "config"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
  opencontrail-config-api:
    container_name: "opencontrail_config_api"
    image: "{{ opencontrail_controller_config_api_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      RABBITMQ_NODE_PORT: "{{ rabbitmq_port }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
  opencontrail-config-devicemgr:
    container_name: "opencontrail_config_devicemgr"
    image: "{{ opencontrail_controller_config_devicemgr_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      RABBITMQ_NODE_PORT: "{{ rabbitmq_port }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
  opencontrail-config-schema:
    container_name: "opencontrail_config_schema"
    image: "{{ opencontrail_controller_config_schema_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      RABBITMQ_NODE_PORT: "{{ rabbitmq_port }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
  opencontrail-config-svcmonitor:
    container_name: "opencontrail_config_svcmonitor"
    image: "{{ opencontrail_controller_config_svcmonitor_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      RABBITMQ_NODE_PORT: "{{ rabbitmq_port }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"

  # WebUI services
  opencontrail-webui-web:
    container_name: "opencontrail_webui_web"
    image: "{{ opencontrail_controller_webui_web_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      RABBITMQ_NODE_PORT: "{{ rabbitmq_port }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
  opencontrail-webui-job:
    container_name: "opencontrail_webui_job"
    image: "{{ opencontrail_controller_webui_job_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      RABBITMQ_NODE_PORT: "{{ rabbitmq_port }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"

  # Control services
  opencontrail-config-nodemgr:
    container_name: "opencontrail_config_nodemgr"
    image: "{{ opencontrail_nodemgr_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      NODE_TYPE: "config"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
  opencontrail-control-control:
    container_name: "opencontrail_control_control"
    image: "{{ opencontrail_controller_control_control_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      RABBITMQ_NODE_PORT: "{{ rabbitmq_port }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
  opencontrail-control-named:
    container_name: "opencontrail_control_named"
    image: "{{ opencontrail_controller_control_named_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      RABBITMQ_NODE_PORT: "{{ rabbitmq_port }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
  opencontrail-control-dns:
    container_name: "opencontrail_control_dns"
    image: "{{ opencontrail_controller_control_dns_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
    environment:
      CONTROLLER_NODES: "{{ contrail_nodes }}"
      CLOUD_ORCHESTRATOR: "openstack"
      RABBITMQ_NODE_PORT: "{{ rabbitmq_port }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"

  # Analytics DB services
  # Analytics services
  # VRouter services

#  opencontrail-:
#    container_name: "opencontrail_"
#    image: "{{ opencontrail__image_full }}"
#    enabled: "{{ enable_opencontrail }}"
#    group: opencontrail
#    host_in_groups: "{{ inventory_hostname in groups['control'] }}"
#    environment:
#      CONTROLLER_NODES: "{{ contrail_nodes }}"
#      CLOUD_ORCHESTRATOR: "openstack"
#      RABBITMQ_NODE_PORT: "{{ rabbitmq_port }}"
#    volumes:
#      - "/etc/localtime:/etc/localtime:ro"
#      - "/run:/run:shared"



#  opencontrail-agent-vrouter:
#    container_name: "opencontrail_agent_vrouter"
#    image: "{{ opencontrail_agent_vrouter_image_full }}"
#    enabled: "{{ enable_opencontrail }}"
#    group: opencontrail
#    host_in_groups: "{{ inventory_hostname in groups['compute'] }}"
#    volumes:
#      - "/etc/localtime:/etc/localtime:ro"
#      - "/run:/run:shared"
#      - "/lib/modules:/lib/modules:ro"
#      - "/usr/src:/usr/src:ro"
#      - "/var/lib/contrail:/var/lib/contrail:ro"
#      - "/var/crashes:/var/crashes:shared"

opencontrail_init_services:
  nova-compute-opencontrail-init:
    image: "{{ opencontrail_openstack_compute_init_image_full }}"
    enabled: "{{ not enable_nova_fake | bool }}"
    host_in_groups: "{{ inventory_hostname in groups['compute'] }}"
  neutron-server-opencontrail-init:
    image: "{{ opencontrail_openstack_neutron_init_image_full }}"
    enabled: true
    host_in_groups: "{{ inventory_hostname in groups['neutron-server'] }}"
  heat-api-opencontrail-init:
    image: "{{ opencontrail_openstack_heat_init_image_full }}"
    enabled: "{{ enable_heat | bool }}"
    host_in_groups: "{{ inventory_hostname in groups['heat-api'] }}"

####################
# Docker
####################
opencontrail_agent_vrouter_image: "contrail-agent-vrouter"
opencontrail_agent_vrouter_tag: "{{ opencontrail_tag }}"
opencontrail_agent_vrouter_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_agent_vrouter_image }}:{{ opencontrail_agent_vrouter_tag }}"

opencontrail_agent_vrouter_init_kernel_image: "contrail-agent-vrouter-init-kernel"
opencontrail_agent_vrouter_init_kernel_tag: "{{ opencontrail_tag }}"
opencontrail_agent_vrouter_init_kernel_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_agent_vrouter_init_kernel_image }}:{{ opencontrail_agent_vrouter_init_kernel_tag }}"

opencontrail_analytics_alarm_gen_image: "contrail-analytics-alarm-gen"
opencontrail_analytics_alarm_gen_tag: "{{ opencontrail_tag }}"
opencontrail_analytics_alarm_gen_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_analytics_alarm_gen_image }}:{{ opencontrail_analytics_alarm_gen_tag }}"

opencontrail_analytics_api_image: "contrail-analytics-api"
opencontrail_analytics_api_tag: "{{ opencontrail_tag }}"
opencontrail_analytics_api_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_analytics_api_image }}:{{ opencontrail_analytics_api_tag }}"

opencontrail_analytics_collector_image: "contrail-analytics-collector"
opencontrail_analytics_collector_tag: "{{ opencontrail_tag }}"
opencontrail_analytics_collector_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_analytics_collector_image }}:{{ opencontrail_analytics_collector_tag }}"

opencontrail_analytics_query_engine_image: "contrail-analytics-query-engine"
opencontrail_analytics_query_engine_tag: "{{ opencontrail_tag }}"
opencontrail_analytics_query_engine_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_analytics_query_engine_image }}:{{ opencontrail_analytics_query_engine_tag }}"

opencontrail_analytics_snmp_collector_image: "contrail-analytics-snmp-collector"
opencontrail_analytics_snmp_collector_tag: "{{ opencontrail_tag }}"
opencontrail_analytics_snmp_collector_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_analytics_snmp_collector_image }}:{{ opencontrail_analytics_snmp_collector_tag }}"

opencontrail_analytics_topology_image: "contrail-analytics-topology"
opencontrail_analytics_topology_tag: "{{ opencontrail_tag }}"
opencontrail_analytics_topology_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_analytics_topology_image }}:{{ opencontrail_analytics_topology_tag }}"

opencontrail_controller_config_api_image: "contrail-controller-config-api"
opencontrail_controller_config_api_tag: "{{ opencontrail_tag }}"
opencontrail_controller_config_api_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_controller_config_api_image }}:{{ opencontrail_controller_config_api_tag }}"

opencontrail_controller_config_devicemgr_image: "contrail-controller-config-devicemgr"
opencontrail_controller_config_devicemgr_tag: "{{ opencontrail_tag }}"
opencontrail_controller_config_devicemgr_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_controller_config_devicemgr_image }}:{{ opencontrail_controller_config_devicemgr_tag }}"

opencontrail_controller_config_schema_image: "contrail-controller-config-schema"
opencontrail_controller_config_schema_tag: "{{ opencontrail_tag }}"
opencontrail_controller_config_schema_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_controller_config_schema_image }}:{{ opencontrail_controller_config_schema_tag }}"

opencontrail_controller_config_svcmonitor_image: "contrail-controller-config-svcmonitor"
opencontrail_controller_config_svcmonitor_tag: "{{ opencontrail_tag }}"
opencontrail_controller_config_svcmonitor_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_controller_config_svcmonitor_image }}:{{ opencontrail_controller_config_svcmonitor_tag }}"

opencontrail_controller_control_control_image: "contrail-controller-control-control"
opencontrail_controller_control_control_tag: "{{ opencontrail_tag }}"
opencontrail_controller_control_control_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_controller_control_control_image }}:{{ opencontrail_controller_control_control_tag }}"

opencontrail_controller_control_dns_image: "contrail-controller-control-dns"
opencontrail_controller_control_dns_tag: "{{ opencontrail_tag }}"
opencontrail_controller_control_dns_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_controller_control_dns_image }}:{{ opencontrail_controller_control_dns_tag }}"

opencontrail_controller_control_named_image: "contrail-controller-control-named"
opencontrail_controller_control_named_tag: "{{ opencontrail_tag }}"
opencontrail_controller_control_named_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_controller_control_named_image }}:{{ opencontrail_controller_control_named_tag }}"

opencontrail_controller_webui_job_image: "contrail-controller-webui-job"
opencontrail_controller_webui_job_tag: "{{ opencontrail_tag }}"
opencontrail_controller_webui_job_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_controller_webui_job_image }}:{{ opencontrail_controller_webui_job_tag }}"

opencontrail_controller_webui_web_image: "contrail-controller-webui-web"
opencontrail_controller_webui_web_tag: "{{ opencontrail_tag }}"
opencontrail_controller_webui_web_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_controller_webui_web_image }}:{{ opencontrail_controller_webui_web_tag }}"

opencontrail_external_cassandra_image: "contrail-external-cassandra"
opencontrail_external_cassandra_tag: "{{ opencontrail_tag }}"
opencontrail_external_cassandra_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_external_cassandra_image }}:{{ opencontrail_external_cassandra_tag }}"

opencontrail_external_kafka_image: "contrail-external-kafka"
opencontrail_external_kafka_tag: "{{ opencontrail_tag }}"
opencontrail_external_kafka_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_external_kafka_image }}:{{ opencontrail_external_kafka_tag }}"

opencontrail_external_zookeeper_image: "contrail-external-zookeeper"
opencontrail_external_zookeeper_tag: "{{ opencontrail_tag }}"
opencontrail_external_zookeeper_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_external_zookeeper_image }}:{{ opencontrail_external_zookeeper_tag }}"

opencontrail_nodemgr_image: "contrail-nodemgr"
opencontrail_nodemgr_tag: "{{ opencontrail_tag }}"
opencontrail_nodemgr_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_nodemgr_image }}:{{ opencontrail_nodemgr_tag }}"

opencontrail_openstack_compute_init_image: "contrail-openstack-compute-init"
opencontrail_openstack_compute_init_tag: "{{ opencontrail_tag }}"
opencontrail_openstack_compute_init_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_openstack_compute_init_image }}:{{ opencontrail_openstack_compute_init_tag }}"

opencontrail_openstack_neutron_init_image: "contrail-openstack-neutron-init"
opencontrail_openstack_neutron_init_tag: "{{ opencontrail_tag }}"
opencontrail_openstack_neutron_init_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_openstack_neutron_init_image }}:{{ opencontrail_openstack_neutron_init_tag }}"

opencontrail_openstack_heat_init_image: "contrail-openstack-heat-init"
opencontrail_openstack_heat_init_tag: "{{ opencontrail_tag }}"
opencontrail_openstack_heat_init_image_full: "{{ opencontrail_docker_registry }}/{{ opencontrail_openstack_heat_init_image }}:{{ opencontrail_openstack_heat_init_tag }}"
