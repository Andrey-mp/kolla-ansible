---
project_name: "opencontrail"

config_nodes: "{% for host in groups['opencontrail-config'] %}{{ hostvars[host]['ansible_' + hostvars[host]['api_interface']]['ipv4']['address'] }}{% if not loop.last %},{% endif %}{% endfor %}"
configdb_nodes: "{% for host in groups['opencontrail-configdb'] %}{{ hostvars[host]['ansible_' + hostvars[host]['api_interface']]['ipv4']['address'] }}{% if not loop.last %},{% endif %}{% endfor %}"
control_nodes: "{% for host in groups['opencontrail-control'] %}{{ hostvars[host]['ansible_' + hostvars[host]['api_interface']]['ipv4']['address'] }}{% if not loop.last %},{% endif %}{% endfor %}"
analyticsdb_nodes: "{% for host in groups['opencontrail-analyticsdb'] %}{{ hostvars[host]['ansible_' + hostvars[host]['api_interface']]['ipv4']['address'] }}{% if not loop.last %},{% endif %}{% endfor %}"
analytics_nodes: "{% for host in groups['opencontrail-analytics'] %}{{ hostvars[host]['ansible_' + hostvars[host]['api_interface']]['ipv4']['address'] }}{% if not loop.last %},{% endif %}{% endfor %}"

rabbitmq_nodes: "{% for host in groups['rabbitmq'] %}{{ hostvars[host]['ansible_' + hostvars[host]['api_interface']]['ipv4']['address'] }}{% if not loop.last %},{% endif %}{% endfor %}"
rabbitmq_env:
  RABBITMQ_NODES: "{{ rabbitmq_nodes }}"
  RABBITMQ_NODE_PORT: "{{ rabbitmq_port }}"
  RABBITMQ_USER: "{{ rabbitmq_user }}"
  RABBITMQ_PASSWORD: "{{ rabbitmq_password }}"

auth_env:
  KEYSTONE_AUTH_ADMIN_USER: "{{ openstack_auth['username'] }}"
  KEYSTONE_AUTH_ADMIN_TENANT: "{{ openstack_auth['project_name'] }}"
  KEYSTONE_AUTH_ADMIN_PASSWORD: "{{ openstack_auth['password'] }}"
  KEYSTONE_AUTH_USER_DOMAIN_NAME: "{{ default_user_domain_name }}"
  KEYSTONE_AUTH_PROJECT_DOMAIN_NAME: "{{ default_project_domain_name }}"
  KEYSTONE_AUTH_URL_VERSION: "/v3"
  KEYSTONE_AUTH_HOST: "{{ kolla_internal_fqdn }}"
  KEYSTONE_AUTH_PROTO: "{{ admin_protocol }}"
  KEYSTONE_AUTH_ADMIN_PORT: "{{ keystone_admin_port }}"
  KEYSTONE_AUTH_PUBLIC_PORT: "{{ keystone_public_port }}"
  KEYSTONE_AUTH_REGION_NAME: "{{ openstack_region_name }}"

# to allow define envirinment for service from merged dicts let's define partial env-s
# also it decrease copy-pasted definitions
config_env:
  CLOUD_ORCHESTRATOR: "openstack"
  AAA_MODE: "{{ opencontrail_aaa_mode }}"
  CONFIGDB_NODES: "{{ configdb_nodes }}"
  ZOOKEEPER_NODES: "{{ configdb_nodes }}"
  CONFIG_NODES: "{{ config_nodes }}"
  LOG_LEVEL: "{{ opencontrail_log_level }}"
control_env:
  CLOUD_ORCHESTRATOR: "openstack"
  AAA_MODE: "{{ opencontrail_aaa_mode }}"
  CONFIGDB_NODES: "{{ configdb_nodes }}"
  CONFIG_NODES: "{{ config_nodes }}"
  CONTROL_NODES: "{{ control_nodes }}"
  LOG_LEVEL: "{{ opencontrail_log_level }}"
analytics_env:
  CLOUD_ORCHESTRATOR: "openstack"
  AAA_MODE: "{{ opencontrail_aaa_mode }}"
  CONFIGDB_NODES: "{{ configdb_nodes }}"
  CONFIG_NODES: "{{ config_nodes }}"
  ANALYTICS_NODES: "{{ analytics_nodes }}"
  ANALYTICSDB_NODES: "{{ analyticsdb_nodes }}"
  ZOOKEEPER_ANALYTICS_NODES: "{{ analyticsdb_nodes }}"
  KAFKA_NODES: "{{ analyticsdb_nodes }}"
  LOG_LEVEL: "{{ opencontrail_log_level }}"
vrouter_env:
  CLOUD_ORCHESTRATOR: "openstack"
  AAA_MODE: "{{ opencontrail_aaa_mode }}"
  CONFIG_NODES: "{{ config_nodes }}"
  ANALYTICS_NODES: "{{ analytics_nodes }}"
  PHYSICAL_INTERFACE: "{{ neutron_external_interface }}"
  VROUTER_GATEWAY: "{{ opencontrail_vrouter_gateway }}"
  METADATA_PROXY_SECRET: "{{ metadata_secret }}"
  LOG_LEVEL: "{{ opencontrail_log_level }}"
  VROUTER_AGENT__RESTART__backup_idle_timeout: "10000"
  VROUTER_AGENT__RESTART__backup_dir: "/var/lib/contrail/backup"
  VROUTER_AGENT__RESTART__backup_file_count: "3"
  VROUTER_AGENT__RESTART__backup_enable: "false"
  VROUTER_AGENT__RESTART__restore_enable: "false"
  VROUTER_AGENT__RESTART__restore_audit_timeout: "15000"
  VROUTER_AGENT__FLOWS__thread_count: "2"
nodemgr_env:
  CLOUD_ORCHESTRATOR: "openstack"
  AAA_MODE: "{{ opencontrail_aaa_mode }}"
  CONFIG_NODES: "{{ config_nodes }}"
  CONTROL_NODES: "{{ control_nodes }}"
  ANALYTICS_NODES: "{{ analytics_nodes }}"
  ANALYTICSDB_NODES: "{{ analyticsdb_nodes }}"
  CONFIG_NODEMGR__DEFAULTS__minimum_diskGB: "2"
  DATABASE_NODEMGR__DEFAULTS__minimum_diskGB: "2"
  LOG_LEVEL: "{{ opencontrail_log_level }}"
configdb_env:
  CLOUD_ORCHESTRATOR: "openstack"
  CASSANDRA_SEEDS: "{{ configdb_nodes }}"
  CASSANDRA_START_RPC: "true"
  CASSANDRA_CLUSTER_NAME: "contrail_database"
  CASSANDRA_PORT: "9161"
  CASSANDRA_CQL_PORT: "9041"
  CASSANDRA_SSL_STORAGE_PORT: "7013"
  CASSANDRA_STORAGE_PORT: "7012"
  CASSANDRA_JMX_LOCAL_PORT: "7201"
  LOG_LEVEL: "{{ opencontrail_log_level }}"
  NODE_TYPE: "config"
analyticsdb_env:
  CLOUD_ORCHESTRATOR: "openstack"
  CASSANDRA_SEEDS: "{{ analyticsdb_nodes }}"
  CASSANDRA_START_RPC: "true"
  CASSANDRA_CLUSTER_NAME: "contrail_analytics"
  CASSANDRA_PORT: "9160"
  CASSANDRA_CQL_PORT: "9042"
  CASSANDRA_SSL_STORAGE_PORT: "7011"
  CASSANDRA_STORAGE_PORT: "7010"
  CASSANDRA_JMX_LOCAL_PORT: "7200"
  LOG_LEVEL: "{{ opencontrail_log_level }}"
  NODE_TYPE: "database"


opencontrail_services:
  # Config database services
  opencontrail-configdb-zookeeper:
    container_name: "opencontrail_configdb_zookeeper"
    image: "{{ opencontrail_external_zookeeper_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-configdb'] }}"
    environment:
      CLOUD_ORCHESTRATOR: "openstack"
      ZOOKEEPER_NODES: "{{ configdb_nodes }}"
      ZOOKEEPER_PORTS: "2888:3888"
      ZOOKEEPER_PORT: "2181"
      NODE_TYPE: "config"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "configdb_zookepeer_logs:/var/log/zookeeper"
      - "configdb_zookeeper:/data"
      - "configdb_zookeeper:/datalog"
  opencontrail-configdb-cassandra:
    container_name: "opencontrail_configdb_cassandra"
    image: "{{ opencontrail_external_cassandra_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-configdb'] }}"
    environment: "{{ configdb_env }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "configdb_cassandra_logs:/var/log/cassandra"
      - "configdb_cassandra_data:/var/lib/cassandra/data"

  # Config API services
  opencontrail-config-nodemgr:
    container_name: "opencontrail_config_nodemgr"
    image: "{{ opencontrail_nodemgr_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-config'] }}"
    environment: "{{ { 'NODE_TYPE': 'config' } | combine(configdb_env) | combine(nodemgr_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-config-api:
    container_name: "opencontrail_config_api"
    image: "{{ opencontrail_controller_config_api_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-config'] }}"
    environment: "{{ config_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-config-devicemgr:
    container_name: "opencontrail_config_devicemgr"
    image: "{{ opencontrail_controller_config_devicemgr_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-config'] }}"
    environment: "{{ config_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-config-schema:
    container_name: "opencontrail_config_schema"
    image: "{{ opencontrail_controller_config_schema_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-config'] }}"
    environment: "{{ config_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-config-svcmonitor:
    container_name: "opencontrail_config_svcmonitor"
    image: "{{ opencontrail_controller_config_svcmonitor_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-config'] }}"
    environment: "{{ config_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"

  # WebUI services
  opencontrail-webui-web:
    container_name: "opencontrail_webui_web"
    image: "{{ opencontrail_controller_webui_web_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-webui'] }}"
    environment: "{{ config_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-webui-job:
    container_name: "opencontrail_webui_job"
    image: "{{ opencontrail_controller_webui_job_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-webui'] }}"
    environment: "{{ config_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"

  # Control services
  opencontrail-control-nodemgr:
    container_name: "opencontrail_control_nodemgr"
    image: "{{ opencontrail_nodemgr_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-control'] }}"
    environment: "{{ { 'NODE_TYPE': 'control' } | combine(nodemgr_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-control-control:
    container_name: "opencontrail_control_control"
    image: "{{ opencontrail_controller_control_control_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-control'] }}"
    environment: "{{ control_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-control-named:
    container_name: "opencontrail_control_named"
    image: "{{ opencontrail_controller_control_named_image_full }}"
    privileged: True
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-control'] }}"
    environment: "{{ control_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
      - "etc_contrail_control_dns:/etc/contrail"
  opencontrail-control-dns:
    container_name: "opencontrail_control_dns"
    image: "{{ opencontrail_controller_control_dns_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-control'] }}"
    environment: "{{ control_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
      - "etc_contrail_control_dns:/etc/contrail"

  # Analytics DB services
  opencontrail-analyticsdb-nodemgr:
    container_name: "opencontrail_analyticsdb_nodemgr"
    image: "{{ opencontrail_nodemgr_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-analyticsdb'] }}"
    environment: "{{ { 'NODE_TYPE': 'database' } | combine(nodemgr_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-analyticsdb-kafka:
    container_name: "opencontrail_analyticsdb_kafka"
    image: "{{ opencontrail_external_kafka_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-analyticsdb'] }}"
    environment:
      CLOUD_ORCHESTRATOR: "openstack"
      KAFKA_NODES: "{{ analyticsdb_nodes }}"
      ZOOKEEPER_NODES: "{{ analyticsdb_nodes }}"
      ZOOKEEPER_PORT: "2182"
      NODE_TYPE: "database"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "analyticsdb_kafka_logs:/var/log/kafka"
  opencontrail-analyticsdb-zookeeper:
    container_name: "opencontrail_analyticsdb_zookeeper"
    image: "{{ opencontrail_external_zookeeper_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-analyticsdb'] }}"
    environment:
      CLOUD_ORCHESTRATOR: "openstack"
      ZOOKEEPER_NODES: "{{ analyticsdb_nodes }}"
      ZOOKEEPER_PORTS: "4888:5888"
      ZOOKEEPER_PORT: "2182"
      NODE_TYPE: "database"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "analyticsdb_zookeeper_logs:/var/log/zookeeper"
      - "analyticsdb_zookeeper:/data"
      - "analyticsdb_zookeeper:/datalog"
  opencontrail-analyticsdb-cassandra:
    container_name: "opencontrail_analyticsdb_cassandra"
    image: "{{ opencontrail_external_cassandra_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-analyticsdb'] }}"
    environment: "{{ analyticsdb_env }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "analyticsdb_cassandra_logs:/var/log/cassandra"
      - "analyticsdb_cassandra_data:/var/lib/cassandra/data"

  # Analytics services
  opencontrail-analytics-nodemgr:
    container_name: "opencontrail_analytics_nodemgr"
    image: "{{ opencontrail_nodemgr_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-analytics'] }}"
    environment: "{{ { 'NODE_TYPE': 'analytics' } | combine(nodemgr_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-analytics-api:
    container_name: "opencontrail_analytics_api"
    image: "{{ opencontrail_analytics_api_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-analytics'] }}"
    environment: "{{ analytics_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-analytics-collector:
    container_name: "opencontrail_analytics_collector"
    image: "{{ opencontrail_analytics_collector_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-analytics'] }}"
    environment: "{{ analytics_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-analytics-query-engine:
    container_name: "opencontrail_analytics_query_engine"
    image: "{{ opencontrail_analytics_query_engine_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-analytics'] }}"
    environment: "{{ analytics_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-analytics-alarm-gen:
    container_name: "opencontrail_analytics_alarm_gen"
    image: "{{ opencontrail_analytics_alarm_gen_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-analytics'] }}"
    environment: "{{ analytics_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-analytics-snmp-collector:
    container_name: "opencontrail_analytics_snmp_collector"
    image: "{{ opencontrail_analytics_snmp_collector_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-analytics'] }}"
    environment: "{{ analytics_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-analytics-topology:
    container_name: "opencontrail_analytics_topology"
    image: "{{ opencontrail_analytics_topology_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-analytics'] }}"
    environment: "{{ analytics_env | combine(rabbitmq_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  redis:
    container_name: "redis"
    image: "{{ redis_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['opencontrail-analytics'] }}"
    labels:
      REDIS:
    environment:
      CLOUD_ORCHESTRATOR: "openstack"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"

  # VRouter services
  opencontrail-vrouter-agent-nodemgr:
    container_name: "opencontrail_vrouter_agent_nodemgr"
    image: "{{ opencontrail_nodemgr_image_full }}"
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['compute'] }}"
    environment: "{{ { 'NODE_TYPE': 'vrouter' } | combine(nodemgr_env) | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
  opencontrail-vrouter-agent:
    container_name: "opencontrail_vrouter_agent"
    image: "{{ opencontrail_vrouter_agent_image_full }}"
    privileged: True
    enabled: "{{ enable_opencontrail }}"
    group: opencontrail
    host_in_groups: "{{ inventory_hostname in groups['compute'] }}"
    environment: "{{ vrouter_env | combine(auth_env) }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/run:/run:shared"
      - "/lib/modules:/lib/modules:ro"
      - "/usr/src:/usr/src:ro"
      - "/bin:/host/bin"
      - "/var/crashes:/var/crashes:shared"
      - "contrail_logs:/var/log/contrail"
      - "/etc/sysconfig/network-scripts:/etc/sysconfig/network-scripts"

opencontrail_init_services:
  nova-compute-opencontrail-init:
    image: "{{ opencontrail_openstack_compute_init_image_full }}"
    enabled: "{{ not enable_nova_fake | bool }}"
    host_in_groups: "{{ inventory_hostname in groups['compute'] }}"
  neutron-server-opencontrail-init:
    image: "{{ opencontrail_openstack_neutron_init_image_full }}"
    enabled: true
    host_in_groups: "{{ inventory_hostname in groups['neutron-server'] }}"
  heat-api-opencontrail-init:
    image: "{{ opencontrail_openstack_heat_init_image_full }}"
    enabled: "{{ enable_heat | bool }}"
    host_in_groups: "{{ inventory_hostname in groups['heat-api'] }}"
  opencontrail-vrouter-kernel-build-init:
    image: "{{ opencontrail_vrouter_kernel_build_init_image_full }}"
    enabled: "{{ enable_opencontrail | bool and hostvars[inventory_hostname]['ansible_distribution'] == 'Ubuntu' and hostvars[inventory_hostname]['ansible_distribution_release'] == 'xenial' }}"
    host_in_groups: "{{ inventory_hostname in groups['compute'] }}"
    volumes:
      - "/lib/modules:/lib/modules"
      - "/usr/src:/usr/src"
      - "/bin:/host/bin"
  opencontrail-vrouter-kernel-init:
    image: "{{ opencontrail_vrouter_kernel_init_image_full }}"
    enabled: "{{ enable_opencontrail | bool and hostvars[inventory_hostname]['ansible_distribution'] != 'Ubuntu' }}"
    host_in_groups: "{{ inventory_hostname in groups['compute'] }}"
    volumes:
      - "/lib/modules:/lib/modules"
      - "/usr/src:/usr/src"
      - "/bin:/host/bin"
      - "/etc/sysconfig/network-scripts:/etc/sysconfig/network-scripts"
  opencontrail-node-init:
    image: "{{ opencontrail_node_init_image_full }}"
    enabled: true
    host_in_groups: "{{ True }}"
    environment:
      CONTRAIL_STATUS_IMAGE: "{{ opencontrail_status_image_full }}"
    volumes:
      - "/usr/bin:/host/usr/bin"

####################
# Docker
####################
opencontrail_vrouter_agent_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-vrouter-agent"
opencontrail_vrouter_agent_tag: "{{ opencontrail_tag }}"
opencontrail_vrouter_agent_image_full: "{{ opencontrail_vrouter_agent_image }}:{{ opencontrail_vrouter_agent_tag }}"

opencontrail_vrouter_kernel_build_init_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-vrouter-kernel-build-init"
opencontrail_vrouter_kernel_build_init_tag: "{{ opencontrail_tag }}"
opencontrail_vrouter_kernel_build_init_image_full: "{{ opencontrail_vrouter_kernel_build_init_image }}:{{ opencontrail_vrouter_kernel_build_init_tag }}"

opencontrail_vrouter_kernel_init_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-vrouter-kernel-init"
opencontrail_vrouter_kernel_init_tag: "{{ opencontrail_tag }}"
opencontrail_vrouter_kernel_init_image_full: "{{ opencontrail_vrouter_kernel_init_image }}:{{ opencontrail_vrouter_kernel_init_tag }}"

opencontrail_analytics_alarm_gen_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-analytics-alarm-gen"
opencontrail_analytics_alarm_gen_tag: "{{ opencontrail_tag }}"
opencontrail_analytics_alarm_gen_image_full: "{{ opencontrail_analytics_alarm_gen_image }}:{{ opencontrail_analytics_alarm_gen_tag }}"

opencontrail_analytics_api_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-analytics-api"
opencontrail_analytics_api_tag: "{{ opencontrail_tag }}"
opencontrail_analytics_api_image_full: "{{ opencontrail_analytics_api_image }}:{{ opencontrail_analytics_api_tag }}"

opencontrail_analytics_collector_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-analytics-collector"
opencontrail_analytics_collector_tag: "{{ opencontrail_tag }}"
opencontrail_analytics_collector_image_full: "{{ opencontrail_analytics_collector_image }}:{{ opencontrail_analytics_collector_tag }}"

opencontrail_analytics_query_engine_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-analytics-query-engine"
opencontrail_analytics_query_engine_tag: "{{ opencontrail_tag }}"
opencontrail_analytics_query_engine_image_full: "{{ opencontrail_analytics_query_engine_image }}:{{ opencontrail_analytics_query_engine_tag }}"

opencontrail_analytics_snmp_collector_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-analytics-snmp-collector"
opencontrail_analytics_snmp_collector_tag: "{{ opencontrail_tag }}"
opencontrail_analytics_snmp_collector_image_full: "{{ opencontrail_analytics_snmp_collector_image }}:{{ opencontrail_analytics_snmp_collector_tag }}"

opencontrail_analytics_topology_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-analytics-topology"
opencontrail_analytics_topology_tag: "{{ opencontrail_tag }}"
opencontrail_analytics_topology_image_full: "{{ opencontrail_analytics_topology_image }}:{{ opencontrail_analytics_topology_tag }}"

opencontrail_controller_config_api_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-controller-config-api"
opencontrail_controller_config_api_tag: "{{ opencontrail_tag }}"
opencontrail_controller_config_api_image_full: "{{ opencontrail_controller_config_api_image }}:{{ opencontrail_controller_config_api_tag }}"

opencontrail_controller_config_devicemgr_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-controller-config-devicemgr"
opencontrail_controller_config_devicemgr_tag: "{{ opencontrail_tag }}"
opencontrail_controller_config_devicemgr_image_full: "{{ opencontrail_controller_config_devicemgr_image }}:{{ opencontrail_controller_config_devicemgr_tag }}"

opencontrail_controller_config_schema_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-controller-config-schema"
opencontrail_controller_config_schema_tag: "{{ opencontrail_tag }}"
opencontrail_controller_config_schema_image_full: "{{ opencontrail_controller_config_schema_image }}:{{ opencontrail_controller_config_schema_tag }}"

opencontrail_controller_config_svcmonitor_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-controller-config-svcmonitor"
opencontrail_controller_config_svcmonitor_tag: "{{ opencontrail_tag }}"
opencontrail_controller_config_svcmonitor_image_full: "{{ opencontrail_controller_config_svcmonitor_image }}:{{ opencontrail_controller_config_svcmonitor_tag }}"

opencontrail_controller_control_control_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-controller-control-control"
opencontrail_controller_control_control_tag: "{{ opencontrail_tag }}"
opencontrail_controller_control_control_image_full: "{{ opencontrail_controller_control_control_image }}:{{ opencontrail_controller_control_control_tag }}"

opencontrail_controller_control_dns_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-controller-control-dns"
opencontrail_controller_control_dns_tag: "{{ opencontrail_tag }}"
opencontrail_controller_control_dns_image_full: "{{ opencontrail_controller_control_dns_image }}:{{ opencontrail_controller_control_dns_tag }}"

opencontrail_controller_control_named_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-controller-control-named"
opencontrail_controller_control_named_tag: "{{ opencontrail_tag }}"
opencontrail_controller_control_named_image_full: "{{ opencontrail_controller_control_named_image }}:{{ opencontrail_controller_control_named_tag }}"

opencontrail_controller_webui_job_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-controller-webui-job"
opencontrail_controller_webui_job_tag: "{{ opencontrail_tag }}"
opencontrail_controller_webui_job_image_full: "{{ opencontrail_controller_webui_job_image }}:{{ opencontrail_controller_webui_job_tag }}"

opencontrail_controller_webui_web_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-controller-webui-web"
opencontrail_controller_webui_web_tag: "{{ opencontrail_tag }}"
opencontrail_controller_webui_web_image_full: "{{ opencontrail_controller_webui_web_image }}:{{ opencontrail_controller_webui_web_tag }}"

opencontrail_external_cassandra_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-external-cassandra"
opencontrail_external_cassandra_tag: "{{ opencontrail_tag }}"
opencontrail_external_cassandra_image_full: "{{ opencontrail_external_cassandra_image }}:{{ opencontrail_external_cassandra_tag }}"

opencontrail_external_kafka_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-external-kafka"
opencontrail_external_kafka_tag: "{{ opencontrail_tag }}"
opencontrail_external_kafka_image_full: "{{ opencontrail_external_kafka_image }}:{{ opencontrail_external_kafka_tag }}"

opencontrail_external_zookeeper_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-external-zookeeper"
opencontrail_external_zookeeper_tag: "{{ opencontrail_tag }}"
opencontrail_external_zookeeper_image_full: "{{ opencontrail_external_zookeeper_image }}:{{ opencontrail_external_zookeeper_tag }}"

opencontrail_nodemgr_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-nodemgr"
opencontrail_nodemgr_tag: "{{ opencontrail_tag }}"
opencontrail_nodemgr_image_full: "{{ opencontrail_nodemgr_image }}:{{ opencontrail_nodemgr_tag }}"

opencontrail_openstack_compute_init_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-openstack-compute-init"
opencontrail_openstack_compute_init_tag: "{{ opencontrail_tag }}"
opencontrail_openstack_compute_init_image_full: "{{ opencontrail_openstack_compute_init_image }}:{{ opencontrail_openstack_compute_init_tag }}"

opencontrail_openstack_neutron_init_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-openstack-neutron-init"
opencontrail_openstack_neutron_init_tag: "{{ opencontrail_tag }}"
opencontrail_openstack_neutron_init_image_full: "{{ opencontrail_openstack_neutron_init_image }}:{{ opencontrail_openstack_neutron_init_tag }}"

opencontrail_openstack_heat_init_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-openstack-heat-init"
opencontrail_openstack_heat_init_tag: "{{ opencontrail_tag }}"
opencontrail_openstack_heat_init_image_full: "{{ opencontrail_openstack_heat_init_image }}:{{ opencontrail_openstack_heat_init_tag }}"

opencontrail_status_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-status"
opencontrail_status_tag: "{{ opencontrail_tag }}"
opencontrail_status_image_full: "{{ opencontrail_status_image }}:{{ opencontrail_status_tag }}"

opencontrail_node_init_image: "{{ opencontrail_docker_registry ~ '/' if opencontrail_docker_registry else '' }}{{ opencontrail_docker_namespace ~ '/' if opencontrail_docker_namespace else '' }}contrail-node-init"
opencontrail_node_init_tag: "{{ opencontrail_tag }}"
opencontrail_node_init_image_full: "{{ opencontrail_node_init_image }}:{{ opencontrail_node_init_tag }}"

redis_image: "redis"
redis_tag: "4.0.2"
redis_image_full: "{{ redis_image }}:{{ redis_tag }}"
